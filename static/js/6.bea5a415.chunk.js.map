{"version":3,"sources":["configs/db.ts","configs/firebase.ts","hooks/useFirebaseServices.tsx","views/SavingsList/subPage/SavingList.tsx","views/SavingsList/subPage/SavingUpdate.tsx","views/SavingsList/subPage/SavingAdd.tsx","views/SavingsList/Savings.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","useFirebaseServices","documentName","useState","loading","setLoading","a","collection","limit","get","todos","data","docs","map","doc","id","todoObj","add","set","delete","getData","addData","updateData","deleteData","useStyles","makeStyles","table","minWidth","SavingList","savingList","classes","history","useHistory","CircularProgress","Box","p","Button","onClick","push","savingUpdateUrl","savingAddUrl","Paper","elevation","valueField","argumentField","name","outerRadius","text","TableContainer","component","Table","className","aria-label","TableHead","TableRow","TableCell","Typography","variant","align","TableBody","row","scope","category","amount","updatedDate","theme","createStyles","container","marginTop","padding","boxSizing","position","formControl","margin","spacing","selectEmpty","root","display","flexWrap","withoutLabel","textField","width","SavingUpdate","props","onUpdate","setCategory","setAmount","getSaving","find","saving","useEffect","currentSaving","toString","FormControl","fullWidth","InputLabel","htmlFor","Select","native","value","onChange","event","target","inputProps","Input","e","startAdornment","InputAdornment","color","Number","updatedAt","Date","toISOString","split","savingUrl","SavingAdd","onAdd","toLowerCase","liquidable","Savings","setSavingList","savingChartList","setSavingChartList","loadData","savings","length","handleUpdate","newSavingList","currentSavingIndex","findIndex","splice","handleAdd","exact","path"],"mappings":"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","file":"static/js/6.bea5a415.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport { firebaseConfig } from \"./firebase\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase?.firestore();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyC-tzfeKC1QSFSZbyAcgNxw7nNa5Bqm0Zs\",\n  authDomain: \"my-pwa-ab0ee.firebaseapp.com\",\n  projectId: \"my-pwa-ab0ee\",\n  storageBucket: \"my-pwa-ab0ee.appspot.com\",\n  messagingSenderId: \"726616032493\",\n  appId: \"1:726616032493:web:789aec950bde86366ab8e4\",\n  measurementId: \"G-4V4DXTD4MX\",\n};\n","import React, { useState } from \"react\";\nimport { db } from \"../configs/db\";\n\nexport interface DocumentID {\n  id: string;\n}\n\nfunction useFirebaseServices<T extends DocumentID>(documentName: string) {\n  const [loading, setLoading] = useState<boolean>(false);\n  async function getData(): Promise<T[]> {\n    setLoading(true);\n    const todos = await db.collection(documentName).limit(50).get();\n    const data: T[] = todos.docs.map((doc) => ({\n      ...(doc.data() as T),\n      id: doc.id,\n    }));\n    setLoading(false);\n    return data;\n  }\n\n  async function addData(todoObj: T): Promise<T> {\n    setLoading(true);\n    const data: any = await db.collection(documentName).add({\n      ...todoObj,\n    });\n    setLoading(false);\n    return { ...data, id: data.id } as T;\n  }\n\n  async function updateData(todoObj: T) {\n    setLoading(true);\n    await db\n      .collection(documentName)\n      .doc(todoObj.id)\n      .set({\n        ...todoObj,\n      });\n    setLoading(false);\n  }\n\n  async function deleteData(todoObj: T) {\n    setLoading(true);\n    await db.collection(documentName).doc(todoObj.id).delete();\n    setLoading(false);\n  }\n\n  return { getData, addData, updateData, deleteData, loading };\n}\n\nexport default useFirebaseServices;\n","import Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {\n  Chart,\n  PieSeries,\n  Title,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation } from \"@devexpress/dx-react-chart\";\nimport React, { useEffect, useState } from \"react\";\nimport useFirebaseServices from \"../../../hooks/useFirebaseServices\";\nimport { TSavings } from \"./../types\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { savingAddUrl, savingUpdateUrl } from \"../../../app/paths\";\nimport { ChartDataI } from \"../Savings\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n});\n\nexport interface SavingListProps {\n  loading: boolean;\n  savingList: ChartDataI[];\n}\n\nconst SavingList: React.FC<SavingListProps> = ({ loading, savingList }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <div>\n          <Box p={2}>\n            <Box>\n              <Button onClick={() => history.push(savingUpdateUrl)}>\n                Update\n              </Button>\n              <Button onClick={() => history.push(savingAddUrl)}>Add</Button>\n            </Box>\n            <Paper elevation={3}>\n              <Chart data={savingList}>\n                <PieSeries\n                  valueField=\"amount\"\n                  argumentField=\"category\"\n                  name=\"category\"\n                  outerRadius={0.75}\n                />\n                <Title text=\"Asset allocation\" />\n                <Animation />\n              </Chart>\n            </Paper>\n          </Box>\n          <Box p={2}>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Typography variant=\"h6\">Category</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Typography variant=\"h6\">Amount</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Typography variant=\"h6\">Date</Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {savingList.map((row) => (\n                    <TableRow key={row.category}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.category}\n                      </TableCell>\n                      <TableCell align=\"right\">{row?.amount}</TableCell>\n                      <TableCell align=\"right\">{row?.updatedDate}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SavingList;\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport SavingList from \"./SavingList\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { savingUrl } from \"../../../app/paths\";\nimport { TSavings } from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      marginTop: \"2rem\",\n      padding: \"2rem\",\n      boxSizing: \"border-box\",\n      position: \"relative\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n);\n\ninterface SavingUpdateProps {\n  loading: boolean;\n  savingList: TSavings[];\n  onUpdate: (saving: TSavings) => {};\n}\n\nconst SavingUpdate: React.FC<SavingUpdateProps> = (props) => {\n  const { loading, savingList, onUpdate } = props;\n  const history = useHistory();\n  const classes = useStyles(props);\n  const [category, setCategory] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"0\");\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    setCategory(event.target.value as string);\n  };\n\n  const getSaving = (): TSavings | undefined => {\n    const currentSaving = savingList.find(\n      (saving) => saving.category === category\n    );\n    return currentSaving;\n  };\n\n  useEffect(() => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      setAmount(currentSaving.amount.toString());\n    } else {\n      setAmount(\"0\");\n    }\n  }, [category]);\n\n  const handleUpdate = () => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      onUpdate({\n        ...currentSaving,\n        amount: Number(amount),\n        updatedAt: new Date().toISOString().split(\"T\")[0],\n      });\n    } else {\n      setAmount(\"0\");\n    }\n  };\n\n  return (\n    <Paper elevation={2} className={classes.container}>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel htmlFor=\"category\">Category</InputLabel>\n        <Select\n          native\n          value={category}\n          onChange={handleChange}\n          inputProps={{\n            name: \"category\",\n            id: \"category\",\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {props.savingList?.map((category) => (\n            <option\n              aria-label=\"None\"\n              value={category.category}\n              key={category.category}\n            >\n              {category.category}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\n        <Input\n          id=\"standard-adornment-amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => history.push(savingUrl)}\n        >\n          cancel\n        </Button>\n      </FormControl>\n    </Paper>\n  );\n};\n\nexport default SavingUpdate;\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport SavingList from \"./SavingList\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { savingUrl } from \"../../../app/paths\";\nimport { TSavings } from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      marginTop: \"2rem\",\n      padding: \"2rem\",\n      boxSizing: \"border-box\",\n      position: \"relative\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n);\n\ninterface SavingUpdateProps {\n  loading: boolean;\n  savingList: TSavings[];\n  onAdd: (saving: TSavings) => {};\n}\n\nconst SavingAdd: React.FC<SavingUpdateProps> = (props) => {\n  const { loading, savingList, onAdd } = props;\n  const history = useHistory();\n  const classes = useStyles(props);\n  const [category, setCategory] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"0\");\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    setCategory(event.target.value as string);\n  };\n\n  const getSaving = (): TSavings | undefined => {\n    const currentSaving = savingList.find(\n      (saving) => saving.category.toLowerCase() === category.toLowerCase()\n    );\n    return currentSaving;\n  };\n\n  useEffect(() => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      setAmount(currentSaving.amount.toString());\n    } else {\n      setAmount(\"0\");\n    }\n  }, [category]);\n\n  const handleAdd = () => {\n    const currentSaving = getSaving();\n    if (!currentSaving) {\n      onAdd({\n        category,\n        amount: Number(amount),\n        updatedAt: new Date().toISOString().split(\"T\")[0],\n        liquidable: 0,\n        id: new Date().toString(),\n      });\n    } else {\n      setAmount(\"0\");\n    }\n  };\n\n  return (\n    <Paper elevation={2} className={classes.container}>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"category\">Category</InputLabel>\n        <Input id=\"category\" value={category} onChange={handleChange} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"amount\">Amount</InputLabel>\n        <Input\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAdd}>\n          Add\n        </Button>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => history.push(savingUrl)}\n        >\n          Cancel\n        </Button>\n      </FormControl>\n    </Paper>\n  );\n};\n\nexport default SavingAdd;\n","import React, { useEffect, useState } from \"react\";\nimport useFirebaseServices from \"../../hooks/useFirebaseServices\";\nimport { TSavings } from \"./types\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport SavingList from \"./subPage/SavingList\";\nimport SavingUpdate from \"./subPage/SavingUpdate\";\nimport { savingAddUrl, savingUpdateUrl, savingUrl } from \"../../app/paths\";\nimport SavingAdd from \"./subPage/SavingAdd\";\n\nexport interface ChartDataI {\n  amount: number;\n  category: string;\n  updatedDate: string;\n}\n\nconst Savings: React.FC = () => {\n  const history = useHistory();\n  const { loading, getData, updateData, addData } =\n    useFirebaseServices<TSavings>(\"savings\");\n  const [savingList, setSavingList] = useState<TSavings[]>([]);\n  const [savingChartList, setSavingChartList] = useState<ChartDataI[]>([]);\n\n  const loadData = async () => {\n    const savings = await getData();\n    setSavingList(savings);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (savingList.length) {\n      const savingChartList: ChartDataI[] = savingList.map((saving) => ({\n        amount: saving.amount,\n        category: saving.category,\n        updatedDate: saving.updatedAt,\n      }));\n      setSavingChartList(savingChartList);\n    }\n  }, [savingList]);\n\n  const handleUpdate = async (savings: TSavings) => {\n    try {\n      await updateData(savings);\n      const newSavingList = [...savingList];\n      const currentSavingIndex = savingList.findIndex(\n        (saving) => saving.category === savings.category\n      );\n      newSavingList.splice(currentSavingIndex, 1, savings);\n      setSavingList(newSavingList);\n      history.push(savingUrl);\n    } catch (err) {}\n  };\n\n  const handleAdd = async (savings: TSavings) => {\n    try {\n      await addData(savings);\n      const newSavingList = [...savingList, savings];\n      setSavingList(newSavingList);\n      history.push(savingUrl);\n    } catch (err) {}\n  };\n\n  const renderList = () => {\n    return <SavingList loading={loading} savingList={savingChartList} />;\n  };\n\n  const renderUpdate = () => {\n    return (\n      <SavingUpdate\n        loading={loading}\n        savingList={savingList}\n        onUpdate={handleUpdate}\n      />\n    );\n  };\n\n  const renderAdd = () => {\n    return (\n      <SavingAdd loading={loading} savingList={savingList} onAdd={handleAdd} />\n    );\n  };\n\n  return (\n    <Switch>\n      <Route exact path={savingUrl} component={renderList} />\n      <Route path={savingUpdateUrl} component={renderUpdate} />\n      <Route path={savingAddUrl} component={renderAdd} />\n    </Switch>\n  );\n};\n\nexport default Savings;\n"],"sourceRoot":""}