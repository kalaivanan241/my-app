{"version":3,"sources":["configs/db.ts","configs/firebase.ts","hooks/useFirebaseServices.tsx","views/SavingsList/SavingsList.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","useFirebaseServices","documentName","useState","loading","setLoading","a","collection","limit","get","todos","data","docs","map","doc","id","todoObj","add","set","delete","getData","addData","updateData","deleteData","SavingsList","loadData","console","log","useEffect","p","elevation","country","area","valueField","argumentField","text"],"mappings":"0LAGAA,IAASC,cCHqB,CAC5BC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDFV,IAAMC,EAAE,OAAGT,UAAH,IAAGA,SAAH,EAAGA,IAAUU,YE4CbC,IA1Cf,SAAmDC,GACjD,MAA8BC,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KADuE,4CAEvE,8BAAAC,EAAA,6DACED,GAAW,GADb,SAEsBN,EAAGQ,WAAWL,GAAcM,MAAM,IAAIC,MAF5D,cAEQC,EAFR,OAGQC,EAAYD,EAAME,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAC5BA,EAAIH,QADuB,IAE/BI,GAAID,EAAIC,QAEVV,GAAW,GAPb,kBAQSM,GART,4CAFuE,kEAavE,WAAuBK,GAAvB,eAAAV,EAAA,6DACED,GAAW,GADb,SAE0BN,EAAGQ,WAAWL,GAAce,IAA5B,eACnBD,IAHP,cAEQL,EAFR,OAKEN,GAAW,GALb,6CAMcM,GANd,IAMoBI,GAAIJ,EAAKI,MAN7B,4CAbuE,kEAsBvE,WAA0BC,GAA1B,SAAAV,EAAA,6DACED,GAAW,GADb,SAEQN,EACHQ,WAAWL,GACXY,IAAIE,EAAQD,IACZG,IAHG,eAICF,IANT,OAQEX,GAAW,GARb,4CAtBuE,kEAiCvE,WAA0BW,GAA1B,SAAAV,EAAA,6DACED,GAAW,GADb,SAEQN,EAAGQ,WAAWL,GAAcY,IAAIE,EAAQD,IAAII,SAFpD,OAGEd,GAAW,GAHb,4CAjCuE,sBAuCvE,MAAO,CAAEe,QAvC8D,2CAuCrDC,QAvCqD,4CAuC5CC,WAvC4C,4CAuChCC,WAvCgC,4CAuCpBnB,a,2JCetCoB,UA9Ce,WAC5B,MAA6BvB,YAA8B,WAA1CmB,GAAjB,EAAQhB,QAAR,EAAiBgB,SAYXK,EAAQ,uCAAG,4BAAAnB,EAAA,sEACIc,IADJ,OACTT,EADS,OAEfe,QAAQC,IAAI,OAAQhB,GAFL,2CAAH,qDAOd,OAHAiB,qBAAU,WACRH,MACC,IAED,gCACE,cAAC,IAAD,CAAKI,EAAG,EAAR,SACE,cAAC,IAAD,CAAOC,UAAW,EAAlB,SACE,eAAC,IAAD,CAAOnB,KAtBF,CACX,CAAEoB,QAAS,SAAUC,KAAM,IAC3B,CAAED,QAAS,SAAUC,KAAM,GAC3B,CAAED,QAAS,MAAOC,KAAM,GACxB,CAAED,QAAS,QAASC,KAAM,GAC1B,CAAED,QAAS,SAAUC,KAAM,GAC3B,CAAED,QAAS,YAAaC,KAAM,GAC9B,CAAED,QAAS,QAASC,KAAM,GAC1B,CAAED,QAAS,SAAUC,KAAM,KAcrB,UACE,cAAC,IAAD,CAAWC,WAAW,OAAOC,cAAc,YAC3C,cAAC,IAAD,CAAOC,KAAK,sBACZ,cAAC,IAAD,WAIN,cAAC,IAAD,CAAKN,EAAG,EAAR,SACE,cAAC,IAAD,CAAMC,UAAW,EAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD","file":"static/js/6.d67451f7.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport { firebaseConfig } from \"./firebase\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase?.firestore();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyC-tzfeKC1QSFSZbyAcgNxw7nNa5Bqm0Zs\",\n  authDomain: \"my-pwa-ab0ee.firebaseapp.com\",\n  projectId: \"my-pwa-ab0ee\",\n  storageBucket: \"my-pwa-ab0ee.appspot.com\",\n  messagingSenderId: \"726616032493\",\n  appId: \"1:726616032493:web:789aec950bde86366ab8e4\",\n  measurementId: \"G-4V4DXTD4MX\",\n};\n","import React, { useState } from \"react\";\nimport { db } from \"../configs/db\";\n\nexport interface DocumentID {\n  id: string;\n}\n\nfunction useFirebaseServices<T extends DocumentID>(documentName: string) {\n  const [loading, setLoading] = useState<boolean>(false);\n  async function getData(): Promise<T[]> {\n    setLoading(true);\n    const todos = await db.collection(documentName).limit(50).get();\n    const data: T[] = todos.docs.map((doc) => ({\n      ...(doc.data() as T),\n      id: doc.id,\n    }));\n    setLoading(false);\n    return data;\n  }\n\n  async function addData(todoObj: T): Promise<T> {\n    setLoading(true);\n    const data: any = await db.collection(documentName).add({\n      ...todoObj,\n    });\n    setLoading(false);\n    return { ...data, id: data.id } as T;\n  }\n\n  async function updateData(todoObj: T) {\n    setLoading(true);\n    await db\n      .collection(documentName)\n      .doc(todoObj.id)\n      .set({\n        ...todoObj,\n      });\n    setLoading(false);\n  }\n\n  async function deleteData(todoObj: T) {\n    setLoading(true);\n    await db.collection(documentName).doc(todoObj.id).delete();\n    setLoading(false);\n  }\n\n  return { getData, addData, updateData, deleteData, loading };\n}\n\nexport default useFirebaseServices;\n","import Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Chart,\n  PieSeries,\n  Title,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation } from \"@devexpress/dx-react-chart\";\nimport React, { useEffect } from \"react\";\nimport useFirebaseServices from \"../../hooks/useFirebaseServices\";\nimport { TSavings } from \"./types\";\n\nconst SavingsList: React.FC = () => {\n  const { loading, getData } = useFirebaseServices<TSavings>(\"savings\");\n  const data = [\n    { country: \"Russia\", area: 12 },\n    { country: \"Canada\", area: 7 },\n    { country: \"USA\", area: 7 },\n    { country: \"China\", area: 7 },\n    { country: \"Brazil\", area: 6 },\n    { country: \"Australia\", area: 5 },\n    { country: \"India\", area: 2 },\n    { country: \"Others\", area: 55 },\n  ];\n\n  const loadData = async () => {\n    const data = await getData();\n    console.log(\"data\", data);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <div>\n      <Box p={2}>\n        <Paper elevation={3}>\n          <Chart data={data}>\n            <PieSeries valueField=\"area\" argumentField=\"country\" />\n            <Title text=\"Area of Countries\" />\n            <Animation />\n          </Chart>\n        </Paper>\n      </Box>\n      <Box p={2}>\n        <Card elevation={3}>\n          <CardContent>\n            <Typography>Savings1</Typography>\n            <Typography>Savings2</Typography>\n            <Typography>Savings3</Typography>\n            <Typography>Savings2</Typography>\n            <Typography>Savings3</Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nexport default SavingsList;\n"],"sourceRoot":""}