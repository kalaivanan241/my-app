{"version":3,"sources":["configs/db.ts","configs/firebase.ts","hooks/useFirebaseServices.tsx","views/SavingsList/subPage/SavingList.tsx","components/DialogBox/DialogBox.tsx","components/ConfirmDialog/ConfirmDialog.tsx","views/SavingsList/subPage/SavingUpdate.tsx","views/SavingsList/subPage/SavingAdd.tsx","views/SavingsList/Savings.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","useFirebaseServices","documentName","useState","loading","setLoading","a","collection","limit","get","todos","data","docs","map","doc","id","todoObj","add","set","delete","getData","addData","updateData","deleteData","useStyles","makeStyles","table","minWidth","SavingList","savingList","classes","history","useHistory","targetItem","setTargetItem","totalAmount","React","useMemo","reduce","acc","amount","CircularProgress","Box","p","Paper","elevation","valueField","argumentField","name","outerRadius","text","toString","onTargetItemChange","item","scheme","Button","onClick","push","savingUpdateUrl","savingAddUrl","TableContainer","component","Table","className","aria-label","TableHead","TableRow","TableCell","Typography","variant","align","TableBody","row","scope","category","updatedDate","DialogBox","showDialog","handleClose","title","children","action","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","ConfirmDialog","confirmActionName","cancelActionName","cancelAction","confirmAction","content","rest","color","theme","createStyles","container","marginTop","padding","boxSizing","position","formControl","margin","spacing","selectEmpty","root","display","flexWrap","withoutLabel","textField","width","SavingUpdate","props","onUpdate","onDelete","setCategory","setAmount","setColor","deleteSaving","setDeleteSaving","getSaving","find","saving","toLowerCase","useEffect","currentSaving","FormControl","fullWidth","InputLabel","htmlFor","Select","native","value","onChange","event","target","inputProps","Input","e","startAdornment","InputAdornment","label","defaultValue","Number","updatedAt","Date","toISOString","split","startIcon","savingUrl","SavingAdd","onAdd","liquidable","Savings","setSavingList","savingChartList","setSavingChartList","loadData","savings","length","handleUpdate","newSavingList","currentSavingIndex","findIndex","splice","handleAdd","handleDelete","exact","path"],"mappings":"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","file":"static/js/6.514b12c4.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport { firebaseConfig } from \"./firebase\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase?.firestore();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyC-tzfeKC1QSFSZbyAcgNxw7nNa5Bqm0Zs\",\n  authDomain: \"my-pwa-ab0ee.firebaseapp.com\",\n  projectId: \"my-pwa-ab0ee\",\n  storageBucket: \"my-pwa-ab0ee.appspot.com\",\n  messagingSenderId: \"726616032493\",\n  appId: \"1:726616032493:web:789aec950bde86366ab8e4\",\n  measurementId: \"G-4V4DXTD4MX\",\n};\n","import React, { useState } from \"react\";\nimport { db } from \"../configs/db\";\n\nexport interface DocumentID {\n  id: string;\n}\n\nfunction useFirebaseServices<T extends DocumentID>(documentName: string) {\n  const [loading, setLoading] = useState<boolean>(false);\n  async function getData(): Promise<T[]> {\n    setLoading(true);\n    const todos = await db.collection(documentName).limit(50).get();\n    const data: T[] = todos.docs.map((doc) => ({\n      ...(doc.data() as T),\n      id: doc.id,\n    }));\n    setLoading(false);\n    return data;\n  }\n\n  async function addData(todoObj: T): Promise<T> {\n    setLoading(true);\n    const data: any = await db.collection(documentName).add({\n      ...todoObj,\n    });\n    setLoading(false);\n    return { ...data, id: data.id } as T;\n  }\n\n  async function updateData(todoObj: T) {\n    setLoading(true);\n    await db\n      .collection(documentName)\n      .doc(todoObj.id)\n      .set({\n        ...todoObj,\n      });\n    setLoading(false);\n  }\n\n  async function deleteData(todoObj: T) {\n    setLoading(true);\n    await db.collection(documentName).doc(todoObj.id).delete();\n    setLoading(false);\n  }\n\n  return { getData, addData, updateData, deleteData, loading };\n}\n\nexport default useFirebaseServices;\n","import Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {\n  Chart,\n  PieSeries,\n  Title,\n  Tooltip,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport {\n  Animation,\n  EventTracker,\n  SeriesRef,\n  Palette,\n} from \"@devexpress/dx-react-chart\";\nimport React, { useEffect, useState } from \"react\";\nimport useFirebaseServices from \"../../../hooks/useFirebaseServices\";\nimport { TSavings } from \"./../types\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { savingAddUrl, savingUpdateUrl } from \"../../../app/paths\";\nimport { ChartDataI } from \"../Savings\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n});\n\nexport interface SavingListProps {\n  loading: boolean;\n  savingList: ChartDataI[];\n}\n\nconst SavingList: React.FC<SavingListProps> = ({ loading, savingList }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [targetItem, setTargetItem] = useState<SeriesRef | undefined>();\n  const getTotal = (newSavingList: ChartDataI[]) => {\n    return newSavingList.reduce((acc: number, data) => {\n      return acc + data.amount;\n    }, 0);\n  };\n  const totalAmount = React.useMemo(() => getTotal(savingList), [savingList]);\n  return (\n    <>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <div>\n          <Box p={2}>\n            <Paper elevation={3}>\n              <Chart data={savingList}>\n                <PieSeries\n                  valueField=\"amount\"\n                  argumentField=\"category\"\n                  name=\"category\"\n                  outerRadius={0.75}\n                />\n                <Title text=\"Asset\" />\n                <Title text={totalAmount.toString()} />\n                <Animation />\n                <EventTracker />\n                <Tooltip\n                  targetItem={targetItem}\n                  onTargetItemChange={(item) => setTargetItem(item)}\n                />\n                <Palette\n                  scheme={[\"#666166\", \"#76e\", \"#6d4\", \"#fff\", \"#000\", \"#e5e5e\"]}\n                />\n              </Chart>\n            </Paper>\n          </Box>\n          <Box>\n            <Button onClick={() => history.push(savingUpdateUrl)}>\n              Update\n            </Button>\n            <Button onClick={() => history.push(savingAddUrl)}>Add</Button>\n          </Box>\n          <Box p={2}>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Typography variant=\"h6\">Category</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Typography variant=\"h6\">Amount</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Typography variant=\"h6\">Date</Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {savingList.map((row) => (\n                    <TableRow key={row.category}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.category}\n                      </TableCell>\n                      <TableCell align=\"right\">{row?.amount}</TableCell>\n                      <TableCell align=\"right\">{row?.updatedDate}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SavingList;\n","import React from \"react\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport interface DialogBox {\n  showDialog: boolean;\n  handleClose: () => void;\n  title?: string;\n  action?: React.ReactNode;\n}\n\nconst DialogBox: React.FC<DialogBox> = ({\n  showDialog,\n  handleClose,\n  title,\n  children,\n  action,\n}) => {\n  return (\n    <Dialog\n      open={showDialog}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      {title && <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>}\n      {children && (\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {children}\n          </DialogContentText>\n        </DialogContent>\n      )}\n      {action && <DialogActions>{action}</DialogActions>}\n    </Dialog>\n  );\n};\n\nexport default DialogBox;\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport DialogBox from \"./../DialogBox/DialogBox\";\nimport Button from \"@material-ui/core/Button\";\n\nexport interface ConfirmDialogProps {\n  showDialog: boolean;\n  title?: string;\n  content?: string;\n  confirmActionName?: string;\n  cancelActionName?: string;\n  confirmAction: () => void;\n  cancelAction: () => void;\n}\n\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = ({\n  confirmActionName,\n  cancelActionName,\n  cancelAction,\n  confirmAction,\n  content,\n  ...rest\n}) => {\n  const renderActions = () => {\n    return (\n      <>\n        <Button onClick={confirmAction} variant=\"outlined\" color=\"secondary\">\n          {confirmActionName ? confirmActionName : \"Yes\"}\n        </Button>\n        <Button onClick={cancelAction} variant=\"contained\" color=\"primary\">\n          {cancelActionName ? cancelActionName : \"No\"}\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <DialogBox handleClose={cancelAction} action={renderActions()} {...rest}>\n      <Typography>{content}</Typography>\n    </DialogBox>\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ColorPicker from \"material-ui-color-picker\";\n\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport SavingList from \"./SavingList\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { savingUrl } from \"../../../app/paths\";\nimport { TSavings } from \"../types\";\nimport ConfirmDialog from \"./../../../components/ConfirmDialog/ConfirmDialog\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      marginTop: \"2rem\",\n      padding: \"2rem\",\n      boxSizing: \"border-box\",\n      position: \"relative\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n);\n\ninterface SavingUpdateProps {\n  loading: boolean;\n  savingList: TSavings[];\n  onUpdate: (saving: TSavings) => {};\n  onDelete: (saving: TSavings) => {};\n}\n\nconst SavingUpdate: React.FC<SavingUpdateProps> = (props) => {\n  const { loading, savingList, onUpdate, onDelete } = props;\n  const history = useHistory();\n  const classes = useStyles(props);\n  const [category, setCategory] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"0\");\n  const [color, setColor] = useState<string | undefined>(\"#fff\");\n  const [deleteSaving, setDeleteSaving] = useState<TSavings | null>(null);\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    setCategory(event.target.value as string);\n  };\n\n  const getSaving = (): TSavings | undefined => {\n    const currentSaving = savingList.find(\n      (saving) => saving.category.toLowerCase() === category.toLowerCase()\n    );\n    return currentSaving;\n  };\n\n  useEffect(() => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      setAmount(currentSaving.amount.toString());\n      setColor(currentSaving.color);\n    } else {\n      setAmount(\"0\");\n    }\n  }, [category]);\n\n  const handleUpdate = () => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      onUpdate({\n        ...currentSaving,\n        amount: Number(amount),\n        updatedAt: new Date().toISOString().split(\"T\")[0],\n        color,\n      });\n    } else {\n      setAmount(\"0\");\n    }\n  };\n\n  const handleDeleteConfirm = () => {\n    if (deleteSaving) {\n      onDelete(deleteSaving);\n    } else {\n      setDeleteSaving(null);\n    }\n  };\n\n  const onDeleteClick = () => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      setDeleteSaving(currentSaving);\n    } else {\n      setDeleteSaving(null);\n    }\n  };\n\n  return (\n    <>\n      <Paper elevation={2} className={classes.container}>\n        <FormControl fullWidth className={classes.formControl}>\n          <InputLabel htmlFor=\"category\">Category</InputLabel>\n          <Select\n            native\n            value={category}\n            onChange={handleChange}\n            inputProps={{\n              name: \"category\",\n              id: \"category\",\n            }}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {props.savingList?.map((category) => (\n              <option\n                aria-label=\"None\"\n                value={category.category}\n                key={category.category}\n              >\n                {category.category}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl fullWidth className={classes.margin}>\n          <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"standard-adornment-amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl fullWidth className={classes.margin}>\n          <ColorPicker\n            label=\"Color\"\n            name=\"color\"\n            defaultValue={color}\n            value={color}\n            onChange={(color) => setColor(color)}\n          />\n        </FormControl>\n        <FormControl fullWidth className={classes.margin}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleUpdate}>\n            Update\n          </Button>\n        </FormControl>\n        <FormControl fullWidth className={classes.margin}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={onDeleteClick}\n            startIcon={<DeleteIcon />}\n          >\n            Delete\n          </Button>\n        </FormControl>\n        <FormControl fullWidth className={classes.margin}>\n          <Button variant=\"outlined\" onClick={() => history.push(savingUrl)}>\n            Cancel\n          </Button>\n        </FormControl>\n      </Paper>\n      <ConfirmDialog\n        content=\"Are you sure, you want to delete?\"\n        showDialog={!!deleteSaving}\n        confirmAction={handleDeleteConfirm}\n        cancelAction={() => setDeleteSaving(null)}\n      />\n    </>\n  );\n};\n\nexport default SavingUpdate;\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport ColorPicker from \"material-ui-color-picker\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport SavingList from \"./SavingList\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { savingUrl } from \"../../../app/paths\";\nimport { TSavings } from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      marginTop: \"2rem\",\n      padding: \"2rem\",\n      boxSizing: \"border-box\",\n      position: \"relative\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: \"25ch\",\n    },\n  })\n);\n\ninterface SavingUpdateProps {\n  loading: boolean;\n  savingList: TSavings[];\n  onAdd: (saving: TSavings) => {};\n}\n\nconst SavingAdd: React.FC<SavingUpdateProps> = (props) => {\n  const { loading, savingList, onAdd } = props;\n  const history = useHistory();\n  const classes = useStyles(props);\n  const [category, setCategory] = useState<string>(\"\");\n  const [amount, setAmount] = useState<string>(\"0\");\n  const [color, setColor] = useState<string>(\"#fff\");\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    setCategory(event.target.value as string);\n  };\n\n  const getSaving = (): TSavings | undefined => {\n    const currentSaving = savingList.find(\n      (saving) => saving.category.toLowerCase() === category.toLowerCase()\n    );\n    return currentSaving;\n  };\n\n  useEffect(() => {\n    const currentSaving = getSaving();\n    if (currentSaving) {\n      setAmount(currentSaving.amount.toString());\n    } else {\n      setAmount(\"0\");\n    }\n  }, [category]);\n\n  const handleAdd = () => {\n    const currentSaving = getSaving();\n    if (!currentSaving) {\n      onAdd({\n        category,\n        amount: Number(amount),\n        updatedAt: new Date().toISOString().split(\"T\")[0],\n        liquidable: 0,\n        color,\n        id: new Date().toString(),\n      });\n    } else {\n      setAmount(\"0\");\n    }\n  };\n\n  return (\n    <Paper elevation={2} className={classes.container}>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"category\">Category</InputLabel>\n        <Input id=\"category\" value={category} onChange={handleChange} />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"amount\">Amount</InputLabel>\n        <Input\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <ColorPicker\n          label=\"Color\"\n          name=\"color\"\n          defaultValue={color}\n          value={color}\n          onChange={(color) => setColor(color)}\n        />\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAdd}>\n          Add\n        </Button>\n      </FormControl>\n      <FormControl fullWidth className={classes.margin}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => history.push(savingUrl)}\n        >\n          Cancel\n        </Button>\n      </FormControl>\n    </Paper>\n  );\n};\n\nexport default SavingAdd;\n","import React, { useEffect, useState } from \"react\";\nimport useFirebaseServices from \"../../hooks/useFirebaseServices\";\nimport { TSavings } from \"./types\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport SavingList from \"./subPage/SavingList\";\nimport SavingUpdate from \"./subPage/SavingUpdate\";\nimport { savingAddUrl, savingUpdateUrl, savingUrl } from \"../../app/paths\";\nimport SavingAdd from \"./subPage/SavingAdd\";\n\nexport interface ChartDataI {\n  amount: number;\n  category: string;\n  updatedDate: string;\n}\n\nconst Savings: React.FC = () => {\n  const history = useHistory();\n  const { loading, getData, updateData, addData, deleteData } =\n    useFirebaseServices<TSavings>(\"savings\");\n  const [savingList, setSavingList] = useState<TSavings[]>([]);\n  const [savingChartList, setSavingChartList] = useState<ChartDataI[]>([]);\n\n  const loadData = async () => {\n    const savings = await getData();\n    setSavingList(savings);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (savingList.length) {\n      const savingChartList: ChartDataI[] = savingList.map((saving) => ({\n        amount: saving.amount,\n        category: saving.category,\n        updatedDate: saving.updatedAt,\n      }));\n      setSavingChartList(savingChartList);\n    }\n  }, [savingList]);\n\n  const handleUpdate = async (savings: TSavings) => {\n    try {\n      await updateData(savings);\n      const newSavingList = [...savingList];\n      const currentSavingIndex = savingList.findIndex(\n        (saving) => saving.category === savings.category\n      );\n      newSavingList.splice(currentSavingIndex, 1, savings);\n      setSavingList(newSavingList);\n      history.push(savingUrl);\n    } catch (err) {}\n  };\n\n  const handleAdd = async (savings: TSavings) => {\n    try {\n      await addData(savings);\n      const newSavingList = [...savingList, savings];\n      setSavingList(newSavingList);\n      history.push(savingUrl);\n    } catch (err) {}\n  };\n\n  const handleDelete = async (savings: TSavings) => {\n    try {\n      await deleteData(savings);\n      const newSavingList = [...savingList];\n      const currentSavingIndex = savingList.findIndex(\n        (saving) => saving.category === savings.category\n      );\n      newSavingList.splice(currentSavingIndex, 1);\n      setSavingList(newSavingList);\n      history.push(savingUrl);\n    } catch (err) {}\n  };\n\n  const renderList = () => {\n    return <SavingList loading={loading} savingList={savingChartList} />;\n  };\n\n  const renderUpdate = () => {\n    return (\n      <SavingUpdate\n        loading={loading}\n        savingList={savingList}\n        onUpdate={handleUpdate}\n        onDelete={handleDelete}\n      />\n    );\n  };\n\n  const renderAdd = () => {\n    return (\n      <SavingAdd loading={loading} savingList={savingList} onAdd={handleAdd} />\n    );\n  };\n\n  return (\n    <Switch>\n      <Route exact path={savingUrl} component={renderList} />\n      <Route path={savingUpdateUrl} component={renderUpdate} />\n      <Route path={savingAddUrl} component={renderAdd} />\n    </Switch>\n  );\n};\n\nexport default Savings;\n"],"sourceRoot":""}